{
    "swagger": "2.0",
    "info": {
        "description": "API documentation for Project Management",
        "version": "1.0.0",
        "title": "Project Management API"
    },
    "host": "localhost:5000",
    "basePath": "/",
    "tags": [
        {
            "name": "projects",
            "description": "Operations related to projects"
        }
    ],
    "securityDefinitions": {
        "jwt": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "paths": {
        "/token": {
            "post": {
                "tags": ["authentication"],
                "summary": "Get JWT token",
                "description": "Get JWT token for authentication",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "User credentials",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "example": "admin"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "admin_pass"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "tags": ["projects"],
                "summary": "Get all projects",
                "description": "Retrieve a list of projects",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of projects to return"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of projects to skip"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of projects",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                },
                "security": [{"jwt": []}]
            },
            "post": {
                "tags": ["projects"],
                "summary": "Add a new project",
                "description": "Create a new project",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Project created"
                    }
                },
                "security": [{"jwt": []}]
            }
        },
        "/projects/{project_id}": {
            "get": {
                "tags": ["projects"],
                "summary": "Get a specific project",
                "description": "Retrieve a specific project by ID",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "ID of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project object",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    },
                    "404": {
                        "description": "Project not found"
                    }
                },
                "security": [{"jwt": []}]
            },
            "put": {
                "tags": ["projects"],
                "summary": "Update a project",
                "description": "Update a specific project by ID",
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "ID of the project"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Project object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project updated"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                },
                "security": [{"jwt": []}]
            },
            "delete": {
                "tags": ["projects"],
                "summary": "Delete a project",
                "description": "Delete a specific project by ID",
                "produces": ["application/json"],
                "parameters": [
                    {
                        "name": "project_id",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "description": "ID of the project"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project deleted"
                    },
                    "404": {
                        "description": "Project not found"
                    }
                },
                "security": [{"jwt": []}]
            }
        }
    },
    "definitions": {
        "Project": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Project 1"
                },
                "description": {
                    "type": "string",
                    "example": "This is a sample project"
                },
                "tech": {
                    "type": "string",
                    "example": "React, Node.js"
                }
            }
        }
    }
}
